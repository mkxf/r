架构描述语言
UML
ArchiMate
BPMN


更新架构图方式：
1. 直接从代码生成
	可以保证架构图和代码一致，但目前工具不能完全支持
2.先用建模工具创建架构图，然后生成代码骨架（比如组件成包、API），
	然后在骨架上添加代码，每次图变化，重新生成代码骨架
3. 手动更新架构图，容易造成图过时或不一致，不推荐

 建议使用， 混合使用现有工具，结合手动和 自动防水创建架构图  
  ex：使用工具基于代码渲染出符合基本要求的架构图，不包含混乱无用信息。
  架构图可以高度可变（适应频繁开发变更，抽象层次低）
  	也可以是静态 -> 上下文架构图、参考架构图、包图、类图、实体图等

  	生成的图不能满足要求时，可以手动建模作为补充
  	如 -> 时序图、状态图、并发图、部署图、运营图等

现代架构对架构图的影响：
	微服务、无服务器、事件驱动等 现代架构风格，只会影响系统的结构、组件间的
	交互方式、原则。

	现代系统架构具有更高层次复杂性，需要考虑：
	分布式组件（如 分布式微服务）、组件类型、组件间交互方式（如 边界、API、消息）、生命周期以及从属关系
so
	架构图中要体现 系统的分解、开发、部署、运维。

	一个包含大量微服务的系统，会有很多架构图，每个微服务都可能有自己的架构图。
	就要考虑：
	一致性： 如 改变一个服务API 会影响其他服务，所有相关架构图都需要修改
	碎片化： 如 一个架构图 无法反映分布式服务的高可用性

