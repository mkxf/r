		
		 
		 int n = 5 - 1;
		 n |= n >>> 1; //优先级 先移位再或赋值，
		 n |= n >>> 2;
		 n |= n >>> 4;
		 n |= n >>> 8;
		 n |= n >>> 16; // n = 7;
		 System.out.println(n);
		 int s = (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;
		 System.out.println(s);


		 == >

		 应解析为：


		int n = 5 - 1;
		int x = 0;
		x = n >>> 1;
		n |= x; // 优先级 先移位再或赋值，
		x = n >>> 2;
		n |= x;
		x = n >>> 4;
		n |= x;
		n |= n >>> 8;
		n |= n >>> 16; // n = 7;
		System.out.println(n); // 7
		int s = (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;
		System.out.println(s); // 8

		== 》 如果不定义新变量，则输出 0,1

		int n = 5 - 1;

		n = n >>> 1;
		n |= n; // 优先级 先移位再或赋值，
		n = n >>> 2;
		n |= n;
		n = n >>> 4;
		n |= x;
		n |= n >>> 8;
		n |= n >>> 16; // n = 7;
		System.out.println(n); // 0
		int s = (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;
		System.out.println(s); // 1