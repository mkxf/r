第3章JAX-RS应用程序，资源和子资源
根资源类是个POJOs（简单Java对象），标注@Path，
	并且至少一个方法标注有@Path，或者标注有 @GET, @PUT, @POST, @DELETE.
1. @Path 标注的是个相对URI路径
	访问路径有类 @Path + 方法的@Path(如果有) 组成， 参数可带正则表达式
	如：@Path("users/{username: [a-zA-Z][a-zA-Z_0-9]*}")
  @Path 以 / 开始或结束，有没都一样

2.@GET, @PUT, @POST, @DELETE, ... (HTTP Methods)
	由  JAX-RS  定义，对应http相应的请求
3. 如果没有明确实现，默认支持 HEAD and OPTIONS方法，
   // to do
   HEAD 调用实现的GET方法（如果存在），并忽略设置的响应实体
   OPTIONS 返回的响应取决于在“Accept”标头中定义的请求的媒体类型
   // to do 
   OPTIONS方法可以在“允许”标头中返回带有一组支持的资源方法的响应，或返回WADL文档

4.  @Produces 标明能产生一个资源并返回到客户端，并能指定其类型，
	类或者方法级别
	方法 覆盖类级别

如果Accept报头是“ Accept: text/plain;q=0.9, text/html”，
其声明客户端可以接受“text / plain”和“text / html”的媒体类型，
但优选后者，则将doGetAsHtml 调用该 方法。

a 指定输出MIME类型		@Produces("text/plain")
b 使用多个输出MIME类型	@Produces({"application/xml", "application/json"})
	@GET
	@Produces({"application/xml", "application/json"})
	public String doGetAsXmlOrJson() {
	    ...
	}
	doGetAsXmlOrJson 如果媒体类型“application / xml”和“application / json”
	中的任一种是可接受的，则 该 方法将被调用。
	如果两者都是可接受的，那么前者将被选择，因为它首先发生

c 服务器端内容协商
	@GET
	@Produces({"application/xml; qs=0.9", "application/json"})
	public String doGetAsXmlOrJson() {
	    ...
	}
	服务器总是发送“application / json”，
	因为“application / xml”具有较低的品质因子,qs=0.9

5. @Consumes
	标明能消费的资源类型（在资源上标明能消费的MIME媒体类型）
	类或者方法 上使用，可以多个类型

	@POST
	@Consumes("text/plain")
	public void postClichedMessage(String message) {
	    // Store the message
	}

	标明能处理 text/plain 类型的请求（表示representations ）
	但改方法返回类型为空，表示不会返回内容，但会将 状态代码为204（无内容） 的响应返回 到客户端

6 @*Param 参数
 @PathParam  从  @Path 提取参数
 @QueryParam 从请求URL的Query组件提取查询参数 
	如: Method(@DefaultValue("2") @QueryParam("step") int step,..)
		查询参数为 step，如果没有，默认值为 2 ，如果不能转换，则报错，抛出404

	参数要求，满足其一：
	1.是原始类型;

	2.有一个接受单个String 参数的构造 函数;

	3.有一个名为valueOf 或 fromString 接受单个 String 参数的静态方法 （例如， Integer.valueOf(String) 和java.util.UUID.fromString(String)）;

	4.List<T>， Set<T> 或 SortedSet<T>，其中 T 满足2或3以上。且集合只读。

	5.实现javax.ws.rs.ext.ParamConverterProvider接口
		该接口返回一个javax.ws.rs.ext.ParamConverter实例，该实例能过通过 	fromString(String value) 方法转换成此实例 。


	@MatrixParam 矩阵参数 URL路径段中提取信息
	@HeaderParam 从HTTP头中提取信息
	@CookieParam 从Cookie相关HTTP标头中声明的Cookie中提取信息。

	@FormParam 用于从 application/x-www-form-urlencoded  类型（古老编码，空格编码"%20"替换为"+"）中取得参数
		GET URI中，POST 消息体中

		@POST
		@Consumes("application/x-www-form-urlencoded")
		public void post(@FormParam("name") String name) {
		    // Store the message
		}
	
