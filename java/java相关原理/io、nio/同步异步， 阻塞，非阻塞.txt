阻塞，非阻塞：进程/线程要访问的数据是否就绪，进程/线程是否需要等待； 
同步，异步：访问数据的方式，同步需要主动读写数据，在读写数据的过程中还是会阻塞； 
异步只需要I/O操作完成的通知，并不主动读写数据，由操作系统内核完成数据的读写。 
再举个网上流传的，非常容易理解的例子： 
老张爱喝茶，废话不说，煮开水。 
出场人物：老张，水壶两把（普通水壶，简称水壶；会响的水壶，简称响水壶）。 
1 老张把水壶放到火上，立等水开。（同步阻塞）老张觉得自己有点傻 
2 老张把水壶放到火上，去客厅看电视，时不时去厨房看看水开没有。（同步非阻塞） 
老张还是觉得自己有点傻，于是变高端了，买了把会响笛的那种水壶。水开之后，能大声发出嘀~~~~的噪音。 
3 老张把响水壶放到火上，立等水开。（异步阻塞）老张觉得这样傻等意义不大 
4 老张把响水壶放到火上，去客厅看电视，水壶响之前不再去看它了，响了再去拿壶。（异步非阻塞）老张觉得自己聪明了。 
所谓同步异步，只是对于水壶而言。普通水壶，同步；响水壶，异步。虽然都能干活，但响水壶可以在自己完工之后，提示老张水开了。这是普通水壶所不能及的。 
同步只能让调用者去轮询自己（情况2中），造成老张效率的低下。所谓阻塞非阻塞，仅仅对于老张而言。立等的老张， 
阻塞；看电视的老张，非阻塞。情况1和情况3中老张就是阻塞的，媳妇喊他都不知道。 
虽然3中响水壶是异步的，可对于立等的老张没有太大的意义。所以一般异步是配合非阻塞使用的，这样才能发挥异步的效用。