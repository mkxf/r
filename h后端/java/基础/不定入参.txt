不定形参 按数组来处理，必须是最后一个
--------
java5 引入 “Varargs”机制 “Varargs”是“variable number of arguments”的意思

只要在一个形参的“类型”与“参数名”之间加上三个连续的“.”（即“...”，英文里的句中省略号），就可以让它和不确定个实参相匹配。
而一个带有这样的形参的方法，就是一个实参个数可变的方法。

不定形参必须是最后一个

在J2SE 1.5的编译器的眼中，实参个数可变的方法是 最后 带了一个 数组形参 的方法的 特例

使用时，数组可以传给不定形参，但不定形参不能传给数组形参
   不定形参 <- 数组

---- 

可以
  private static   <T> void testVarargs( T... args) { 
    } 
    
  ---------
     private static void testOverloading( Object... args) { 
    } 
    private static void testOverloading( Object o, Object... args) { 
    } 

    不会提示错误，但   testOverloading(1, 2, 3); 会 编译出错 

    ----

        private static void testOverloading( int i) { 
        System.out.println("A"); 
    } 
    private static void testOverloading( int i, int j) { 
        System.out.println("B"); 
    } 
    private static void testOverloading( int i, int... more) { 
        System.out.println("C"); 
    } 

     testOverloading( 1);//打印出A 
        testOverloading( 1, 2);//打印出B 
        testOverloading( 1, 2, 3);//打印出C 

 可以，但不推荐

     private static   <T> void testVarargs( T... args) {
        System.out.println(1);
        System.out.println(args[0].toString());
    } 
    
    private static   void testVarargs( String... args) {
        System.out.println(2);
        System.out.println(args[0].toString());
    } 


        2
	x
 可以，但不推荐
---------