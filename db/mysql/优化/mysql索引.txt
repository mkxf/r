
https://www.kancloud.cn/kancloud/theory-of-mysql-index/41857


Memory存储引擎可以选择Hash或BTree索引，
Hash索引只能用于=或<=>的等式比较。 


-----------
normal：表示普通索引

unique：表示唯一的，不允许重复的索引，如果该字段信息保证不会重复例如身份证号用作索引时，可设置为unique

full textl: 表示 全文搜索的索引。 FULLTEXT 用于搜索很长一篇文章的时候，效果最好。用在比较短的文本，如果就一两行字的，普通的 INDEX 也可以。

总结，索引的类别由建立索引的字段内容特性来决定，通常normal最常见。

--------------------

为了使索引的使用效率更高，在创建索引时，必须考虑在哪些字段上创建索引和创建什么类型的索引,有7大原则：

1．选择唯一性索引
2．为经常需要排序、分组和联合操作的字段建立索引
3．为常作为查询条件的字段建立索引
4．限制索引的数目
5．尽量使用数据量少的索引
6．尽量使用前缀来索引
7．删除不再使用或者很少使用的索引

--------------------
　1、普通索引：create index on Tablename(列的列表) 

　　alter table TableName add index (列的列表) 

　　create table TableName([...], index [IndexName] (列的列表) 

　　2、唯一性索引：create unique index 

　　alter ... add unique 

　　主键：一种唯一性索引，必须指定为primary key 

　　3、全文索引：从3.23.23版开始支持全文索引和全文检索，FULLTEXT， 

　　可以在char、varchar或text类型的列上创建。 

　　4、单列索引、多列索引： 

　　多个单列索引与单个多列索引的查询效果不同，因为： 

　　执行查询时，MySQL只能使用一个索引，会从多个索引中选择一个限制最为严格的索引。 

　　5、最左前缀(Leftmost Prefixing)：多列索引，例如：fname_lname_age索引，以下的搜索条件MySQL都将使用 

　　fname_lname_age索引：firstname,lastname,age;firstname,lastname;firstname，其他情况将不使用。 

