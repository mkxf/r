invocation.invoke() 就是通知struts2接着干下面的事情
比如 调用下一个拦截器 或 执行下一个Action
就等于退出了你自己编写的这个interceptor了


理解：
1. Struts2拦截器是在访问某个Action或Action的某个方法，字段之前或之后实施拦截，并且Struts2拦截器是可插拔的，拦截器是ＡＯＰ的一种实现． 

2. 拦截器栈（Interceptor Stack）。Struts2拦截器栈就是将拦截器按一定的顺序联结成一条链。在访问被拦截的方法或字段时，Struts2拦截器链中的拦截器就会按其之前定义的顺序被调用。 

二、实现Struts2拦截器原理 

Struts2拦截器的实现原理相对简单，当请求struts2的action时，Struts 2会查找配置文件，并根据其配置实例化相对的    拦截器对象，然后串成一个列表，最后一个一个地调用列表中的拦截器 

定义Struts2拦截器
Struts2规定用户自定义拦截器必须实现com.opensymphony.xwork2.interceptor.Interceptor接口

一般在自定义拦截器的时候，可以使用struts中提供的AbstractInterceptor抽象类来简化这一步骤。
其中AbstractInterceptor提供了init()和destroy()的空实现，使用时只需要覆盖intercept() 

  1. public abstract class AbstractInterceptor implements Interceptor;  
  2. public abstract class MethodFilterInterceptor extends AbstractInterceptor;  

  1. public class MyFirstInterceptor extends AbstractInterceptor {  
  2.   
  3.     @Override  
  4.     public String intercept(ActionInvocation arg0) throws Exception {  
  5.         String view = "";  
  6.         System.out.println("站住，大姐，大大劫！！");  
  7.         //getProxy()方法，可以获取action的配置信息，和调用的方法  
  8.         System.out.println(arg0.getProxy().getAction());  
  9.         view = arg0.invoke();  
  10.         System.out.println("欢迎回来");  
  11.         return view;  
  12.     }  

而MethodFilterInterceptor则提供了includeMethods和excludeMethods两个属性，用来过滤执行该过滤器的action的方法。可以通过param来加入或者排除需要过滤的方法。

四、配置Struts2拦截器 

Struts2拦截器需要在struts.xml中声明，如下struts.xml配置文件

  1. <struts>  
  2.     <package name="myTest" extends="struts-default" namespace="/first">  
  3.         <interceptors>  
  4.             <interceptor name="firstInterceptor" class="org.tarena.struts.interceptor.MyFirstInterceptor"/>  
  5.             <interceptor-stack name="MyInterceptorStack">  
  6.                 <interceptor-ref name="firstInterceptor"/>  
  7.             </interceptor-stack>    
  8.         </interceptors>  
  9.       
  10.         <action name="login" class="org.tarena.struts.test01.LoginAction">  
  11.             <interceptor-ref name="MyInterceptorStack"></interceptor-ref>  
  12.             <result name="success" type="dispatcher">/ok.jsp</result>  
  13.             <result name="input">/index.jsp</result>  
  14.         </action>  
  15.     </package>  
  16. </struts>  